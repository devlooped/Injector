<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <!-- We fake multi-targeting for platforms by arbitrarily picking multiple target frameworks -->
    <TargetFrameworks>net40;net45</TargetFrameworks>
    <Platforms>x86;x64</Platforms>
    <BootstrapPlatform>Win32</BootstrapPlatform>
    <PrimaryOutputKind>tools</PrimaryOutputKind>
    <ImportNuGetBuildTasksPackTargetsFromSdk>false</ImportNuGetBuildTasksPackTargetsFromSdk>
    <OutputPath>bin\$(Platform)</OutputPath>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateDependencyFile>false</GenerateDependencyFile>

    <PackageId>Xamarin.Windows.Injector</PackageId>
    <Authors>Microsoft</Authors>
    <Description>Allows injecting .NET code into a remote process on Windows</Description>
    <PackageProjectUrl>https://github.com/xamarin/Windows.Injector</PackageProjectUrl>
    <PackageLicenseUrl>https://raw.githubusercontent.com/xamarin/Windows.Injector/master/LICENSE.txt</PackageLicenseUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/xamarin/Windows.Injector/master/Icon.png</PackageIconUrl>

    <Out Condition="'$(Out)' == ''">out</Out>
    <PackageOutputPath>$(Out)</PackageOutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net45'">
    <Platform>x86</Platform>
    <PlatformTarget>x86</PlatformTarget>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net40'">
    <Platform>x64</Platform>
    <PlatformTarget>x64</PlatformTarget>
    <Prefer32Bit>false</Prefer32Bit>
    <BootstrapPlatform>x64</BootstrapPlatform>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\Xamarin.Windows.Injector.props" Link="Xamarin.Windows.Injector.props" Pack="true" Kind="Build" />
    <None Include="..\Xamarin.Windows.Injector.targets" Link="Xamarin.Windows.Injector.targets" Pack="true" Kind="Build" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="NuGet.Build.Packaging" Version="0.2.5-dev.9" PrivateAssets="all" />
    <PackageReference Include="GitInfo" Version="2.0.20" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Bootstrap\Bootstrap.vcxproj" Pack="true">
      <Project>{8072b47b-5611-4bab-8ef4-cb3125d676a5}</Project>
      <AdditionalProperties>VisualStudioVersion=$(VisualStudioVersion);Configuration=$(Configuration);Platform=$(BootstrapPlatform)</AdditionalProperties>
      <Name>Bootstrap</Name>
    </ProjectReference>
  </ItemGroup>

  <Target Name="Pack" DependsOnTargets="GetPackageTargetPath;GetPackageContents" Returns="@(PackageTargetPath)">
    <MakeDir Directories="$(PackageOutputPath)" Condition="!Exists('$(PackageOutputPath)')" />
    <CreatePackage Manifest="@(PackageTargetPath)" NuspecFile="$(NuspecFile)" Contents="@(_PackageContent)" TargetPath="@(PackageTargetPath->'%(FullPath)')">
      <Output TaskParameter="OutputPackage" ItemName="_PackageTargetPath" />
      <Output TaskParameter="OutputPackage" ItemName="FileWrites" />
    </CreatePackage>

    <Message Importance="high" Text="Created package at %(_PackageTargetPath.FullPath)." />
  </Target>

  <Target Name="GetPackageTargetPath" Returns="@(PackageTargetPath)">
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="GetPackageTargetPath" Properties="TargetFramework=net45">
      <Output ItemName="PackageTargetPath" TaskParameter="TargetOutputs" />
    </MSBuild>
  </Target>

  <UsingTask TaskName="NuGet.Build.Packaging.Tasks.CreatePackage" AssemblyFile="$(NuGetPackageRoot)\nuget.build.packaging\0.2.5-dev.9\build\NuGet.Build.Packaging.Tasks.dll" />

</Project>
