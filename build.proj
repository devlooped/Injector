<Project Sdk="Microsoft.Build.NoTargets/1.0.53" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <ItemGroup>
    <!-- MSBuild /t:Restore will restore these packages -->
    <PackageReference Include="NuGet.Build.Packaging" Version="0.2.5-dev*" PrivateAssets="all" />
    <PackageReference Include="GitInfo" Version="2.0.20" PrivateAssets="all" />
    <PackageReference Include="Sleet.Azure" Version="0.2.5" PrivateAssets="all" />
  </ItemGroup>

  <PropertyGroup>
    <AssetTargetFallback>netcoreapp2.0</AssetTargetFallback>
    <TargetFramework>net45</TargetFramework>
    <Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
    <IsPackagingProject>true</IsPackagingProject>
    <InferPackageContents>true</InferPackageContents>

    <PackageId>Xamarin.Windows.Injector</PackageId>
    <Authors>Cory Plotts</Authors>
    <Description>Allows injecting .NET code into a remote process on Windows</Description>
    <PackageProjectUrl>https://github.com/xamarin/Windows.Injector</PackageProjectUrl>
    <PackageLicenseUrl>https://raw.githubusercontent.com/xamarin/Windows.Injector/master/LICENSE.txt</PackageLicenseUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/xamarin/Windows.Injector/master/Icon.png</PackageIconUrl>

    <Out Condition="'$(Out)' == ''">out</Out>
    <PackageOutputPath>$(Out)</PackageOutputPath>
  </PropertyGroup>

  <ItemGroup>
    <Package Include="$(PackageOutputPath)\*.nupkg" />
    <ProjectReference Include="src\Injector\Injector.csproj" />
  </ItemGroup>

  <Target Name="Build" DependsOnTargets="GetPackageTargetPath" BeforeTargets="GetPackageContents">
    <MakeDir Directories="$(Out)" Condition="!Exists('$(Out)')" />
  </Target>

  <Target Name="GitVersion" />

  <Target Name="SetPackageVersion" BeforeTargets="GetPackageVersion" DependsOnTargets="GitVersion">
    <PropertyGroup>
      <PackageVersion Condition="'$(GitSemVerDashLabel)' == ''">$(GitSemVerMajor).$(GitSemVerMinor).$(GitSemVerPatch)</PackageVersion>
      <PackageVersion Condition="'$(GitSemVerDashLabel)' != ''">$(GitBaseVersionMajor).$(GitBaseVersionMinor).$(GitBaseVersionPatch)$(GitSemVerDashLabel)-build$(GitSemVerPatch.PadLeft('3', '0'))+git.$(GitCommit)</PackageVersion>
      <PackageReleaseNotes>
        $([System.IO.File]::ReadAllText('$(MSBuildThisFileDirectory)Readme.md'))

        Built from $(PackageProjectUrl)/commit/$(GitCommit)
      </PackageReleaseNotes>
    </PropertyGroup>
  </Target>

</Project>